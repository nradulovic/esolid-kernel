.TH "CPU port internals" 3 "Tue Oct 29 2013" "Version 1.0BetaR01" "eSolid - Real-Time Kernel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CPU port internals \- 
.PP
CPU port inner work\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "uint_fast8_t \fBportFindLastSet_\fP (\fBportReg_T\fP val)"
.br
.RI "\fIFind last set bit in a word\&. \fP"
.ti -1c
.RI "void * \fBportCtxInit_\fP (void *stck, size_t stckSize, void(*fn)(void *), void *arg)"
.br
.RI "\fIInitialize the thread context\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBportReg_T\fP \fBgPortIsrNesting_\fP"
.br
.RI "\fIVariable to keep track of ISR nesting\&. \fP"
.ti -1c
.RI "const PORT_C_ROM \fBportReg_T\fP \fBpwr2LKP\fP [\fBPORT_DATA_WIDTH_VAL\fP]"
.br
.RI "\fILook up table for: 2^n expression\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
CPU port inner work\&. 


.SH "Function Documentation"
.PP 
.SS "uint_fast8_t portFindLastSet_ (\fBportReg_T\fPval)"

.PP
Find last set bit in a word\&. 
.PP
\fBParameters:\fP
.RS 4
\fIval\fP Value which needs to be evaluated
.RE
.PP
This function is used by the scheduler to efficiently determine the highest priority of thread ready for execution\&. For algorithm details see: http://en.wikipedia.org/wiki/Find_first_set\&. 
.PP
\fBReturns:\fP
.RS 4
The position of the last set bit in a word 
.RE
.PP

.SS "void* portCtxInit_ (void *stck, size_tstckSize, void(*)(void *)fn, void *arg)"

.PP
Initialize the thread context\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstck\fP Pointer to the allocated thread stck\&. The pointer points to the beginning of the memory as defined per C language\&. It's up to port function to adjust the pointer according to the stck type: full descending or full ascending one\&. 
.br
\fIstckSize\fP The size of allocated stck in bytes\&. 
.br
\fIfn\fP Pointer to the thread function\&. 
.br
\fIarg\fP Argument that will be passed to thread function at the starting of execution\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The new top of stck after thread context initialization\&. 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBportReg_T\fP gPortIsrNesting_"

.PP
Variable to keep track of ISR nesting\&. 
.SS "const PORT_C_ROM \fBportReg_T\fP pwr2LKP[\fBPORT_DATA_WIDTH_VAL\fP]"
\fBInitial value:\fP
.PP
.nf
= {
    (1U <<  0), (1U <<  1), (1U <<  2), (1U <<  3),
    (1U <<  4), (1U <<  5), (1U <<  6), (1U <<  7),










}
.fi
.PP
Look up table for: 2^n expression\&. This look up table can be used to accelerate the Logical Shift Left operations which are needed to set bits inside the priority bit map\&. In plain C this operation would be written as: \fC(1U << n)\fP, but in many 8-bit CPUs this operation can be lengthy\&. If there is a need for faster operation than this table can be used instead of the mentioned C code\&.
.PP
To use the look up table change \fBPORT_PWR2\fP macro implementation from: \fC(1U << (pwr))\fP to \fCpwr2LKP[pwr]\fP 
.SH "Author"
.PP 
Generated automatically by Doxygen for eSolid - Real-Time Kernel from the source code\&.
