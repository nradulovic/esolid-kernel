.TH "esKernCtrl" 3 "Tue Oct 29 2013" "Version 1.0BetaR01" "eSolid - Real-Time Kernel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
esKernCtrl \- 
.PP
Kernel control block structure\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <kernel\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "struct \fBesThd\fP * \fBcthd\fP"
.br
.RI "\fIPointer to the Current Thread\&. \fP"
.ti -1c
.RI "struct \fBesThd\fP * \fBpthd\fP"
.br
.RI "\fIPointer to the Pending Thread to be switched\&. \fP"
.ti -1c
.RI "enum \fBesKernState\fP \fBstate\fP"
.br
.RI "\fIState of kernel\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Kernel control block structure\&. 

This structure holds important status data about the kernel\&. Since all data within the structure is somewhat related and accessed within the same pieces of code it was decided it is better to group all kernel data into the structure\&. This way the compiler can generate code that gets the address of the structure and then use relative indirect addressing to access all members of the structure\&. This results in more efficient code on architectures that have relative indirect addressing capability\&. 
.PP
\fBObject class:\fP
.RS 4
Regular \fBAPI\fP object, this object is part of the application programming interface\&. 
.RE
.PP

.SH "Field Documentation"
.PP 
.SS "struct \fBesThd\fP* esKernCtrl::cthd"

.PP
Pointer to the Current Thread\&. 
.SS "struct \fBesThd\fP* esKernCtrl::pthd"

.PP
Pointer to the Pending Thread to be switched\&. 
.SS "enum \fBesKernState\fP esKernCtrl::state"

.PP
State of kernel\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for eSolid - Real-Time Kernel from the source code\&.
