{"name":"eSolid RT Kernel","tagline":"real time, kernel, embedded","body":"# eSolid Real-Time Kernel\r\n\r\nThis is a bare-kernel, the result of two weeks of work. It is intended for a bigger \r\nproject which already includes some synchronization mechanisms. The initial \r\nidea was that this kernel would only provide minimal functionality for context \r\nswitching, but the kernel implementation went so nicely that I think that it \r\nwould be great to share it. \r\n\r\neSolid is a collection of resources for embedded system design and this\r\nReal-Time Kernel is only a piece of that collection. Because of that fact\r\nremember: __there are no synchronization or IPC mechanisms in this kernel__,\r\nand it can be viewed as a preemptive Round-Robin scheduler, only.\r\n\r\n\r\n## TODO list\r\n\r\n- Integrate a profiling system (memory/stack usage, cpu usage...)\r\n- Time delay/management\r\n- test, test, test...\r\n\r\n\r\n# Using eSolid Real-Time Kernel\r\n\r\n## Configuration and ports\r\n\r\nConfiguration is done in two files: `kernel_cfg.h` (port independent settings) \r\nand in `cpu_cfg.h` (port depended settings).\r\nCurrently, kernel is ported only to ARMv7-M architecture range of \r\nmicrocontrollers. It was tested on STM32F100 series of microcontrollers, but it\r\nshould work, with minimal modifications, on any ARMv7-M CPU. Some other ports \r\nlike AVR-GCC are planned, too.\r\n\r\n\r\n## Building\r\n\r\nThe kernel was built using arm-none-eabi GCC v4.7.3 compiler toolchain (from \r\nhttps://launchpad.net/gcc-arm-embedded/+download) and binary was downloaded\r\nto the MCU using _texane_ gdb-server. There are no makefiles, it is assumed\r\nthat IDE will generate them for you.\r\n\r\nThere are two source files which need to be compiled: \r\n- kernel.c in `/src` directory and \r\n- cpu.c in `/port/arm-none-eabi-gcc/v7-m` directory.\r\n\r\nThe following include paths are needed:\r\n- `/inc`\r\n- `/port/arm-none-eabi-gcc/common`\r\n- `/port/arm-none-eabi-gcc/v7-m`\r\n\r\n### Documentation\r\n\r\nSome documentation is available under Wiki https://github.com/nradulovic/esolid-kernel/wiki. \r\nDoxygen configuration and full documentation source files are available in `/doc` directory. \r\nGo to the directory and run doxygen:\r\n\r\n    # doxygen doxyfile-kernel\r\n    # doxygen doxyfile-kernel-port\r\n\r\nThis will generate HTML, LaTex and man documentation in `/doc/out/kernel` and\r\n`/doc/out/kernel-port` directories, respectively.\r\n\r\n\r\n## Running\r\nTo successfully use and run kernel you will need to study the kernel \r\ndocumentation. The documentation is still being written and some examples will\r\nbe added later.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}